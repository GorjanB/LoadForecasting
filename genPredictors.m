function [X, dates, labels] = genPredictors(hours, minutes, potrosuvacka,date)
% GENPREDICTORS generates a matrix of predictor variables for the load
% forecasting model. 
%
% USAGE:
% [X, dates, labels] = genPredictors(data, term, holidays)
%
% Inputs:
% data     : A Dataset array of historical weather and load information
% term     : 'long' or 'short' indicating the horizon of the forecast.
%            Predictors such as previous day load are not included in the 
%            long term forecast.
% holidays : A vector of holidays. If this is not specified, holidays are
%            generated by the function CREATEHOLIDAYDATES
%
% Outputs:
% X     : A matrix of predictor data where each row corresponds to an
%         observation (hourly load) and each column corresponds to a variable
% dates : A vector of dates for each observation
% labels: A cell array of strings describing each predictor


% Convert Dates into a Numeric Representation

    dates = datenum(date, 'yyyy-mm-dd') + (hours - 1)/24;

%if all(floor(dates)==dates) % true if dates don't include any hour information
    %dates = dates + (data.Hour-1)/24;
%end



% Create Predictors

% Short term forecasting inputs
% Lagged load inputs
%prevDaySameHourLoad = [NaN(24,1); data.SYSLoad(1:end-24)];
prevDaySameHourLoad = [NaN(48,1); potrosuvacka(1:end-48)];
%prevWeekSameHourLoad = [NaN(168,1); data.SYSLoad(1:end-168)];
prevWeekSameHourLoad = [NaN(336,1); potrosuvacka(1:end-336)];
%prev24HrAveLoad = filter(ones(1,24)/24, 1, data.SYSLoad);
prev24HrAveLoad = filter(ones(1,48)/48, 1, potrosuvacka);
%prev24HrAveLoad = filter(ones(1,24)/24, 1, [NaN(24,1); data.SYSLoad(1:end-24)]);

% Date predictors
dayOfWeek = weekday(dates);

Month = month(dates);

% Non-business days
isWorkingDay = ~ismember(dayOfWeek,[1 7]);
%[~,~,isWorkingDay] = createHolidayDates(data.NumDate);



    % Short Term
    X = [  hours  minutes dayOfWeek isWorkingDay prevDaySameHourLoad prevWeekSameHourLoad prev24HrAveLoad];
    labels = { 'Hour','Minutes','Weekday','workingDay','asd','asd','asd'};



function y = rep48(x)
y = repmat(x(:), 1, 48)';
y = y(:);